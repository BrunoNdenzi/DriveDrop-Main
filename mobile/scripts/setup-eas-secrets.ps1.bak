# Setup EAS Secrets for Production
# This script helps you create the necessary secrets for your EAS build

# Usage: 
# 1. Run this script: ./setup-eas-secrets.ps1
# 2. Enter the values when prompted

# Check if EAS CLI is installed
try{
    $null = Get-Command eas -ErrorAction Stop
    Write-Host "‚úÖ EAS CLI is installed." -ForegroundColor Green
} catch {
    Write-Host "‚ùå EAS CLI is not installed. Please install it with: npm install -g eas-cli" -ForegroundColor Red
    exit 1
}

# Function to create a secret
function CreateSecret {
    param (
        [string]$name,
        [string]$description,
        [bool]$isRequired = $true,
        [bool]$isSecret = $true
    )
    
    Write-Host "`nüìù $description" -ForegroundColor Cyan
    
    if ($isSecret) {
        Write-Host "üîí This is a sensitive value and will be stored securely." -ForegroundColor Yellow
    }
    
    $value = Read-Host "Enter value for $name"
    
    if ($isRequired -and [string]::IsNullOrWhiteSpace($value)) {
        Write-Host "‚ùå This value is required. Please try again." -ForegroundColor Red
        return CreateSecret -name $name -description $description -isRequired $isRequired -isSecret $isSecret
    }
    
    if (-not [string]::IsNullOrWhiteSpace($value)) {
        Write-Host "Creating secret $name..." -ForegroundColor Gray
        & eas secret:create --scope project --name $name --value $value --force
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Secret $name created successfully." -ForegroundColor Green
        } else {
            Write-Host "‚ùå Failed to create secret $name." -ForegroundColor Red
        }
    } else {
        Write-Host "‚ö†Ô∏è Skipped creating secret $name." -ForegroundColor Yellow
    }
}
# Main script
Write-Host "üîê EAS Secrets Setup for Production" -ForegroundColor Magenta
Write-Host "This script will help you create the necessary secrets for your EAS build." -ForegroundColor White
Write-Host "These secrets will be used in your production build." -ForegroundColor White
Write-Host "Make sure you have the correct values ready." -ForegroundColor White

# Create the required secrets
CreateSecret -name "EXPO_PUBLIC_SUPABASE_URL" -description "Enter your Supabase URL"
CreateSecret -name "EXPO_PUBLIC_SUPABASE_ANON_KEY" -description "Enter your Supabase Anon Key" 
CreateSecret -name "EXPO_PUBLIC_API_URL" -description "Enter your API URL (example: https://api.yourdomain.com)"
CreateSecret -name "EXPO_PUBLIC_GOOGLE_MAPS_API_KEY" -description "Enter your Google Maps API Key" -isRequired $false
CreateSecret -name "EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY" -description "Enter your Stripe Publishable Key" -isRequired $false
CreateSecret -name "SENTRY_DSN" -description "Enter your Sentry DSN" -isRequired $false

# List all secrets
Write-Host "`nüìã Listing all EAS secrets:" -ForegroundColor Magenta
& eas secret:list

Write-Host "`n‚úÖ Setup complete! Your EAS secrets are now configured for production builds." -ForegroundColor Green
Write-Host "Run 'yarn build:android' to create a new production build with these secrets." -ForegroundColor Cyan
